//////
Maximum Sum Combination
//////

class Solution {
    static List<Integer> maxCombinations(int n, int k, int A[], int B[]) {
    Arrays.sort(A);
    Arrays.sort(B);
    PriorityQueue<Integer> pq=new PriorityQueue<>();
    List<Integer> ans=new ArrayList<>();
    for(int i=n-1;i>n-k-1;i--){
        for(int j=n-1;j>n-k-1;j--){
            int x=A[i]+B[j];
            if(pq.size()<k){
                pq.add(x);
            }
            else{
                if(pq.peek()<x){
                    pq.poll();
                    pq.add(x);
                }
                else{
                    break;
                }
            }
        }
    }
    while(!pq.isEmpty()){
        ans.add(0,pq.poll());
    }
    return ans;
    }
}
